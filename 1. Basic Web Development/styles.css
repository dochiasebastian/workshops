* {
    box-sizing: border-box;
    font-family: monospace;
    overflow-y: hidden;
}

body {
    counter-reset: checkedCount;
    position: relative;
}

button[type="submit"] {
    font-size: large;
}

button[type="submit"]:hover {
    background-color: greenyellow;
}

a[href^="http"]::before {
    background-image: url(./icons/externalLinkIco.png);
    background-size: 15px 17px;
    display: inline-block;
    width: 15px;
    height: 15px;
    content: "";
}

label:lang(en) {
    font-size: large;
}

.preferences {
    width: 40%;
    background-color: #F6F4F4;
    position: fixed;
    margin-left: auto;
    margin-right: auto;
    right: 0;
    left: 0;
    transition: bottom 200ms linear 50ms;
}

.editor {
    background-color: #F6F4F4;
    width: 30%;
    margin: auto;
    margin-top: 10vh;
    padding: 15px;
}

.to-edit {
    float: right;
    cursor: pointer;
}

.to-create {
    cursor: pointer;
}

.delete-btn {
    width: fit-content;
    height: fit-content;
    border: none;
    background: none;
    color: red;
    cursor: pointer;
}

.edit-btn {
    color: blue;
}

.hidden {
    bottom: -450px;
}

.showing {
    bottom: 0px !important;
}

.preferences:hover {
    bottom: -435px;
    transition: bottom 200ms linear 50ms;
}

.content {
    padding: 20px;
}

.content h1 {
    text-align: center;
}

.editing {
    border: none;
}

.section {
    margin-top: 10px;
}

.section button[type="button"] {
    display: none;
}

.section.editing button[type="button"] {
    display: inline-block;
}

.bar {
    background-color: #736B60;
    width: 100%;
    height: 10px;
}

.grid-element {
    display: grid;
    grid-auto-flow: column;
    grid-row: 1;
}

.preferences .editing .grid-element {
    grid-template-columns:10px 10px  1fr 15px;
}

.grid-element label {
    justify-self: start;
    margin-right: 10px;
    margin-left: 10px;
    width: 100%;
}

.grid-element a {
    justify-self: end;
    margin-top: 20px;
    display: flex;
    align-content: center;
}

.grid-element input:not(input[type="submit"]) {
    justify-self: end;
}

.grid-element input[type="submit"] {
    justify-self: start;
}

input[type="text"] {
    width: 70%;
}

.btn-confirm {
    margin-top: 15px;
    justify-self: start;
}

.lock {
    float: right;
    margin-top: 20px;
}

.begin-arrow {
    width: 200px;
    display: flex;
    flex-flow: column;
    text-align: center;
    margin: auto;
    margin-top: 18vh;
}

.begin-arrow *:not([type="button"]){
    margin-top: 2px;
    margin-bottom: 2px;
    color: red;
}

.agreeCountDisplay::after {
    content: " " counter(checkedCount) " permissions.";
    color: indigo;
}

.no-display {
    display: none;
}

#permissions-form :checked[type="checkbox"] {
    counter-increment: checkedCount;
}

#text-alert {
    color: brown;
    float: right;
    margin-right: 7%;
}

.spinner-grid {
    width: 100px;
    height: 100px;
    margin: auto;
    margin-top: 40vh;
}

.spinner-grid div {
    width: 33%;
    height: 33%;
    background-color: #736B60;
    float: left;
    -webkit-animation: squareGridScaleDelay 1.3s infinite ease-in-out;
    animation: squareGridScaleDelay 1.3s infinite ease-in-out;
}

.presentation {
    bottom: 20vh !important;
}

.spinner-grid .square1 {
    -webkit-animation-delay: 0.4s;
    animation-delay: 0.4s;
}

.spinner-grid .square2 {
    -webkit-animation-delay: 0.6s;
    animation-delay: 0.6s;
}

.spinner-grid .square3 {
    -webkit-animation-delay: 0.8s;
    animation-delay: 0.8s;
}

.spinner-grid .square4 {
    -webkit-animation-delay: 0.2s;
    animation-delay: 0.2s;
}

.spinner-grid .square5 {
    -webkit-animation-delay: 0.4s;
    animation-delay: 0.4s;
}

.spinner-grid .square6 {
    -webkit-animation-delay: 0.6s;
    animation-delay: 0.6s;
}

.spinner-grid .square7 {
    -webkit-animation-delay: 0s;
    animation-delay: 0s;
}

.spinner-grid .square8 {
    -webkit-animation-delay: 0.2s;
    animation-delay: 0.2s;
}

.spinner-grid .square9 {
    -webkit-animation-delay: 0.4s;
    animation-delay: 0.4s;
}

@-webkit-keyframes squareGridScaleDelay {
    0%, 70%, 100% {
        -webkit-transform: scale3D(1, 1, 1);
        transform: scale3D(1, 1, 1);
    }
    35% {
        -webkit-transform: scale3D(0, 0, 1);
        transform: scale3D(0, 0, 1);
    }
}

@keyframes squareGridScaleDelay {
    0%, 70%, 100% {
        -webkit-transform: scale3D(1, 1, 1);
        transform: scale3D(1, 1, 1);
    }
    35% {
        -webkit-transform: scale3D(0, 0, 1);
        transform: scale3D(0, 0, 1);
    }
}

@media only screen and (max-width: 1240px) {
    .preferences {
        width: fit-content;
    }
}